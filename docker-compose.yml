services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: platform_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - platform-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d platform_app"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: sh -c "sleep 5 && pnpm run dev"
    working_dir: /app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: "http://localhost:3001/api"
    depends_on:
      - backend
    volumes:
      - /app/node_modules
    networks:
      - platform-network
    working_dir: /app
    command: sh -c "pnpm run dev"

volumes:
  postgres_data:

networks:
  platform-network:
    driver: bridge